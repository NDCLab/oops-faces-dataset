<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'happy titrated value': '', 'anger titrated value': '', 'which button yes': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="fileList" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1536, 864]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="of-b" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <PolygonComponent name="fixation_box5">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_box5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(666,500)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$rt" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="isi = (random() * .3) + .4&amp;#10;thisExp.addData('isi', isi)&amp;#10;start_time = isi + .2&amp;#10;rt = start_time + 2&amp;#10;thisExp.addData('img_onset', start_time)&amp;#10;&amp;#10;if em_trial == &quot;happy&quot;:&amp;#10;    image_path3 = image_path[trial_num]&amp;#10;    if stim_trial == &quot;same&quot;:&amp;#10;        image_path4 = image_path[trial_num]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;    elif stim_trial == &quot;different&quot;:&amp;#10;        image_path4 = image_path1[trial_num]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;    trial_num += 1&amp;#10;elif em_trial == &quot;anger&quot;:&amp;#10;    image_path3 = image_path_ang[trial_num0]&amp;#10;    if stim_trial == &quot;same&quot;:&amp;#10;        image_path4 = image_path_ang[trial_num0]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;    elif stim_trial == &quot;different&quot;:&amp;#10;        image_path4 = image_path1_ang[trial_num0]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;    trial_num0 += 1&amp;#10;trial_num_block +=1&amp;#10;thisExp.addData('imagepath', image_path4)&amp;#10;thisExp.addData('imagepath2', image_path3)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="makehuman.send(&quot;shutdown&quot;)" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_path3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[533, 400]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_path4" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[533,400]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$start_time" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="stim_trigger_task">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="port.close()&amp;#10;port.open()&amp;#10;#set stimTriggerSent to false at the start of the trial. this way&amp;#10;#when the stimulus is shown, we can change it to True. This variable&amp;#10;#is used to ensure we only throw the stimulus EEG trigger once.&amp;#10;stimTriggerSent = False&amp;#10;stimTriggerSent2 = False&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;#the first if statement below ensures that the subsequent if statements (and throwing of triggers)&amp;#10;#only occurs once per trial. That is, only when the stimulus is presented (.status = STARTED) and&amp;#10;#stimTriggerSent is still False. Once a trigger is sent, we change stimTriggerSent to True so that &amp;#10;#the stimulus eeg trigger will not be sent again for this trial&amp;#10;#codes: first image: 13 (hexcode: 0D) = happy, 14 (hexcode: 0E) = anger&amp;#10;#second image: 15 (hexcode: 0F) = happy same, 16 (hexcode: 10) = happy different, 17 (hexcode: 11) = anger same, &amp;#10;#18 (hexcode: 12) = anger different&amp;#10;if image.status == STARTED and not stimTriggerSent:&amp;#10;    if em_trial == &quot;happy&quot;: #code denoting which stimulus array was sent&amp;#10;        stimTriggerSent = True&amp;#10;        port.write([0x0D]) #hexcode = 13; eeg trigger sent&amp;#10;        time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;        port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;    elif em_trial == &quot;anger&quot;:&amp;#10;        stimTriggerSent = True&amp;#10;        port.write([0x0E]) #hexcode = 14; eeg trigger sent&amp;#10;        time.sleep(PulseWidth)&amp;#10;        port.write([0x00])&amp;#10;if image_2.status == STARTED and not stimTriggerSent2:&amp;#10;    if em_trial == &quot;happy&quot;:&amp;#10;        if stim_trial == &quot;same&quot;: #code denoting which stimulus array was sent (from excel file)&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x0F]) #hexcode = 15; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;        elif stim_trial == &quot;different&quot;:&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x10]) #hexcode = 16; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;    elif em_trial == &quot;anger&quot;:&amp;#10;        if stim_trial == &quot;same&quot;: #code denoting which stimulus array was sent (from excel file)&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x11]) #hexcode = 17; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;        elif stim_trial == &quot;different&quot;:&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x12]) #hexcode = 18; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stim_trigger_task" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_6">
        <Param val="'1','8'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$keyCorrect" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$rt" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="resp_trigger_task">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#clear out the keys_counted variable at the start of the trial&amp;#10;#this variable will hold the keys that have had eeg triggers thrown&amp;#10;#already within a given trial.&amp;#10;keys_counted = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;if key_resp_6.keys and len(key_resp_6.keys) &gt; len(keys_counted):# A key response has been made but we haven't yet &quot;counted&quot; it&amp;#10;    keys_counted.append(key_resp_6.keys[-1]) #add this response to list of keys pressed this trial&amp;#10;    # first digit: response (1:1,2:8), second digit: accuracy (1:correct,2:incorrect)&amp;#10;    if len(key_resp_6.keys) &lt; 2: #if this is  the first response&amp;#10;        if key_resp_6.keys[-1] == '1':&amp;#10;            if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x0B]) # 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x0C])# 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;            elif stim_trial == 'different':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x0C])# 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x0B])# 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;&amp;#10;        elif key_resp_6.keys[-1] == '8':&amp;#10;            if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x0C]) # 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x0B])# 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;            elif stim_trial == 'different':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x0B])# 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x0C])# 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;&amp;#10;    elif len(key_resp_6.keys) &gt;= 2: #if this is NOT the first response&amp;#10;        #first digit: response, second digit: accuracy&amp;#10;        if key_resp_6.keys[-1] == '1':&amp;#10;             if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x15]) # 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x16])# 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;             elif stim_trial == &quot;different&quot;:&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x16])# 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x15])# 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                    &amp;#10;        elif key_resp_6.keys[-1] == '8':&amp;#10;            if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x16]) # 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x15])# 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;            elif stim_trial == &quot;different&quot;:&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x15])# 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x16])# 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="resp_trigger_task" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_24">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="size1 = [453, 613]&amp;#10;shuffle(size1)&amp;#10;first_size = size1[0]&amp;#10;second_size = size1[0]*0.75&amp;#10;image_2_size = (first_size, second_size)&amp;#10;image_2.size = image_2_size&amp;#10;thisExp.addData('image_size2', image_2_size)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_24" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="titrate">
      <PolygonComponent name="fixation_box2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_box2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(600, 450)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="image_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="y" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="faceX = fg.make_new_face(avg_face, face_arr)&amp;#10;# save a model to model_path&amp;#10;model_path0 = os.path.join(out_model_path0, &quot;face{0:04d}.mhm&quot;.format(n))&amp;#10;fg.write_mimic_file(avg_path, model_path0, keys, faceX)&amp;#10;makehuman.load_model(model_path0)&amp;#10;makehuman.set_expression(neutral, emotion, 67.4)&amp;#10;image_path3 = makehuman.get_render(img_path0, settings, str(n))&amp;#10;path3 = str(img_path0) +'/render_' + str(n) + '.png'&amp;#10;&amp;#10;if key_resp.corr == 0:&amp;#10;    z_list.append(0)&amp;#10;    z = z_list[n-1]&amp;#10;elif key_resp.corr == 1:&amp;#10;    z_list.append(1)&amp;#10;    z = z_list[n-1]&amp;#10;    &amp;#10;if z_list[n-2] == 0:&amp;#10;    if z_list[n-1] == 1:&amp;#10;        reversals+=1&amp;#10;elif z_list[n-2]==1:&amp;#10;    if z_list[n-1]==0:&amp;#10;        reversals+=1&amp;#10;thisExp.addData(&quot;stim_lev&quot;, c)&amp;#10;thisExp.addData(&quot;trial_n&quot;, n)&amp;#10;if n&gt;=3: &amp;#10;    if c &gt; .674:&amp;#10;        next_stim = c - (s/(2+reversals))*(z-acc)&amp;#10;        next_stim_percent = next_stim * 100&amp;#10;        c = next_stim&amp;#10;        makehuman.load_model(model_path0)&amp;#10;        makehuman.set_expression(neutral, emotion, next_stim_percent)&amp;#10;        image_path2 = makehuman.get_render(img_path0, settings, str(n)+&quot;_titrate&quot;)&amp;#10;        path2 = str(img_path0) +'/render_' + str(n) + '_titrate.png'&amp;#10;        n+=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr">
      <CodeComponent name="code_14">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;    instructionsLink = &quot;left_main.png&quot;&amp;#10;elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;    instructionsLink = &quot;right_main.png&quot;&amp;#10;accuracy_train = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_14" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_13">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$instructionsLink" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(796, 658)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param val="'c'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="titrate_1">
      <PolygonComponent name="fixation_box">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_box" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(600, 450)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="image_5">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_6">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_6" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_3">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="y" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="faceX = fg.make_new_face(avg_face, face_arr)&amp;#10;# save a model to model_path&amp;#10;model_path0 = os.path.join(out_model_path0, &quot;face{0:04d}.mhm&quot;.format(n))&amp;#10;fg.write_mimic_file(avg_path, model_path0, keys, faceX)&amp;#10;makehuman.load_model(model_path0)&amp;#10;makehuman.set_expression(neutral, emotion, 67.4)&amp;#10;image_path3 = makehuman.get_render(img_path0, settings, str(n))&amp;#10;path3 = str(img_path0) +'/render_' + str(n) + '.png'&amp;#10;if key_resp_3.corr == 0:&amp;#10;    z_list.append(0)&amp;#10;    z = z_list[n-1]&amp;#10;elif key_resp_3.corr == 1:&amp;#10;    z_list.append(1)&amp;#10;    z = z_list[n-1]&amp;#10;if n&gt;2:&amp;#10;    if z_list[n-2] == 0:&amp;#10;        if z_list[n-1] == 1:&amp;#10;            reversals+=1&amp;#10;    elif z_list[n-2]==1:&amp;#10;        if z_list[n-1]==0:&amp;#10;            reversals+=1&amp;#10;thisExp.addData(&quot;stim_lev&quot;, c)&amp;#10;thisExp.addData(&quot;trial_n&quot;, n)&amp;#10;if n&lt;3:&amp;#10;    next_stim = c - (s/n)*(z-acc)&amp;#10;    next_stim_percent = next_stim*100&amp;#10;    c = next_stim&amp;#10;    # save a model to model_path&amp;#10;    makehuman.load_model(model_path0)&amp;#10;    makehuman.set_expression(neutral, emotion, next_stim_percent)&amp;#10;    image_path2 = makehuman.get_render(img_path0, settings, str(n)+&quot;_titrate&quot;)&amp;#10;    path2 = str(img_path0) +'/render_' + str(n) + '_titrate.png'&amp;#10;    n+=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="rendering">
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if key_resp_10.keys == 'c':&amp;#10;    import face_generator as fg&amp;#10;    trial_num = 0&amp;#10;    trial_num0 = 0&amp;#10;    timeout1 = 0&amp;#10;    # where are you saving your mhm files?&amp;#10;    out_model_path = os.path.join(path,&quot;generated_models&quot;)&amp;#10;    # where are you saving your images?&amp;#10;    img_path = os.path.join(path,&quot;renders&quot;)&amp;#10;    image_path = []&amp;#10;    image_path_ang = []&amp;#10;    image_path1 = []&amp;#10;    image_path1_ang = []&amp;#10;    model_number = 0&amp;#10;    participant_n = int(expInfo['participant'])&amp;#10;&amp;#10;    for model_number in range(0,84):&amp;#10;        # make a model (depending on your experiment, you could make a bunch ahead of time, &amp;#10;        #  but then you may as well use the Generate Faces plugin on the GUI instead)&amp;#10;        faceX = fg.make_new_face(avg_face, face_arr)&amp;#10;&amp;#10;        # save a model to model_path&amp;#10;        model_path = os.path.join(out_model_path, &quot;face{:04d}{:04d}.mhm&quot;.format(participant_n, model_number))&amp;#10;        fg.write_mimic_file(avg_path, model_path, keys, faceX)&amp;#10;&amp;#10;        # load the model into makehuman&amp;#10;        makehuman.load_model(model_path)&amp;#10;        # set an emotional expression at a specific percentage&amp;#10;        makehuman.set_expression(neutral, emotion, 57.7) # 0.0 would be purely neutral, 100 would be &quot;fully&quot; expressing the emotion.&amp;#10;        # render the model&amp;#10;        # use the &quot;image_path&quot; variable in a PsychoPy ImageStim image instead of printing it&amp;#10;        image_path0 = makehuman.get_render(img_path, settings, str(model_number))&amp;#10;        path8 = str(img_path) + '/render_' + str(model_number) + '.png'&amp;#10;        image_path.append(path8)&amp;#10;        makehuman.load_model(model_path)&amp;#10;        makehuman.set_expression(neutral, emotion, int(expInfo['happy titrated value']))&amp;#10;        image_path2 = makehuman.get_render(img_path, settings, str(model_number)+&quot;_copy&quot;)&amp;#10;        path4 = str(img_path) +'/render_' + str(model_number) + '_copy.png'&amp;#10;        image_path1.append(path4)&amp;#10;        #print(image_path)&amp;#10;        # get ready for the next model&amp;#10;        model_number+=1&amp;#10;        &amp;#10;    for model_number in range(84,168):&amp;#10;        # make a model (depending on your experiment, you could make a bunch ahead of time, &amp;#10;        #  but then you may as well use the Generate Faces plugin on the GUI instead)&amp;#10;        faceX = fg.make_new_face(avg_face, face_arr)&amp;#10;&amp;#10;        # save a model to model_path&amp;#10;        model_path = os.path.join(out_model_path, &quot;face{:04d}{:04d}.mhm&quot;.format(participant_n, model_number))&amp;#10;        fg.write_mimic_file(avg_path, model_path, keys, faceX)&amp;#10;&amp;#10;        # load the model into makehuman&amp;#10;        makehuman.load_model(model_path)&amp;#10;        # set an emotional expression at a specific percentage&amp;#10;        makehuman.set_expression(neutral, emotion1, 67.4) # 0.0 would be purely neutral, 100 would be &quot;fully&quot; expressing the emotion.&amp;#10;        # render the model&amp;#10;        # use the &quot;image_path&quot; variable in a PsychoPy ImageStim image instead of printing it&amp;#10;        image_pathA = makehuman.get_render(img_path, settings, str(model_number))&amp;#10;        pathA = str(img_path) + '/render_' + str(model_number) + '.png'&amp;#10;        image_path_ang.append(pathA)&amp;#10;        makehuman.load_model(model_path)&amp;#10;        makehuman.set_expression(neutral, emotion1, int(expInfo['anger titrated value']))&amp;#10;        image_path2A = makehuman.get_render(img_path, settings, str(model_number)+&quot;_copy&quot;)&amp;#10;        path2A = str(img_path) +'/render_' + str(model_number) + '_copy.png'&amp;#10;        image_path1_ang.append(path2A)&amp;#10;        #print(image_path)&amp;#10;        # get ready for the next model&amp;#10;        model_number+=1&amp;#10;        &amp;#10;    image_path3 = image_path[0]&amp;#10;    image_path4 = image_path1[0]&amp;#10;&amp;#10;else:&amp;#10;    img_path = os.path.join(path,&quot;renders&quot;)&amp;#10;    trial_num = 0&amp;#10;    trial_num0 = 0&amp;#10;    model_number = 0&amp;#10;    participant_n = int(expInfo['participant'])&amp;#10;    image_path = []&amp;#10;    image_path_ang = []&amp;#10;    image_path1 = []&amp;#10;    image_path1_ang = []&amp;#10;    for model_number in range(0,84):&amp;#10;        path8 = str(img_path) + '/render_' + str(model_number) + '.png'&amp;#10;        image_path.append(path8)&amp;#10;        path4 = str(img_path) +'/render_' + str(model_number) + '_copy.png'&amp;#10;        image_path1.append(path4)&amp;#10;        model_number+=1&amp;#10;    for model_number in range(84,168):&amp;#10;        pathA = str(img_path) + '/render_' + str(model_number) + '.png'&amp;#10;        image_path_ang.append(pathA)&amp;#10;        path2A = str(img_path) +'/render_' + str(model_number) + '_copy.png'&amp;#10;        image_path1_ang.append(path2A)&amp;#10;        model_number+=1&amp;#10;    image_path3 = image_path[0]&amp;#10;    image_path4 = image_path1[0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="render_text">
      <TextComponent name="text_3">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Now rendering ..." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="which_em">
      <CodeComponent name="code_6">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="em = [&quot;anger&quot;, &quot;happy&quot;];&amp;#10;shuffle(em);&amp;#10;em_trial = em[0];&amp;#10;thisExp.addData(&quot;em&quot;, em[0]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="em = ['anger', 'happy']&amp;#10;stim = ['same', 'different']&amp;#10;shuffle(em)&amp;#10;shuffle(stim)&amp;#10;em_trial = em[0]&amp;#10;stim_trial = stim[0]&amp;#10;if len(count_A_same) &lt;=42:&amp;#10;    if em_trial == &quot;anger&quot;:&amp;#10;        if stim_trial == &quot;same&quot;:&amp;#10;            count_A_same.append(1)&amp;#10;if len(count_A_diff) &lt;=42:&amp;#10;    if em_trial == &quot;anger&quot;:&amp;#10;        if stim_trial == &quot;different&quot;:&amp;#10;            count_A_diff.append(1)&amp;#10;if len(count_H_same) &lt;=42:&amp;#10;    if em_trial == &quot;happy&quot;:&amp;#10;        if stim_trial == &quot;same&quot;:&amp;#10;            count_H_same.append(1)&amp;#10;if len(count_H_diff) &lt;=42:&amp;#10;    if em_trial == &quot;happy&quot;:&amp;#10;        if stim_trial == &quot;different&quot;:&amp;#10;            count_H_diff.append(1)&amp;#10;if stim_trial == &quot;same&quot;:&amp;#10;    if em_trial == &quot;anger&quot;:&amp;#10;        if len(count_A_same) &gt; 42:&amp;#10;            if len(count_A_diff) &lt; 42:&amp;#10;                    stim_trial = &quot;different&quot;&amp;#10;                    count_A_diff.append(1)&amp;#10;            elif len(count_H_diff) &lt; 42:&amp;#10;                    stim_trial = &quot;different&quot;&amp;#10;                    em_trial = &quot;happy&quot;&amp;#10;                    count_H_diff.append(1)&amp;#10;            elif len(count_H_same) &lt; 42:&amp;#10;                    em_trial = &quot;happy&quot;&amp;#10;                    count_H_same.append(1)&amp;#10;if stim_trial == &quot;different&quot;:&amp;#10;    if em_trial == &quot;anger&quot;:&amp;#10;        if len(count_A_diff) &gt; 42:&amp;#10;            if len(count_H_diff) &lt; 42:&amp;#10;                    em_trial = &quot;happy&quot;&amp;#10;                    count_H_diff.append(1)&amp;#10;            elif len(count_H_same) &lt; 42:&amp;#10;                    stim_trial = &quot;same&quot;&amp;#10;                    em_trial = &quot;happy&quot;&amp;#10;                    count_H_same.append(1)&amp;#10;            elif len(count_A_same) &lt; 42:&amp;#10;                    stim_trial = &quot;same&quot;&amp;#10;                    count_A_same.append(1)&amp;#10;if stim_trial == &quot;different&quot;:&amp;#10;    if em_trial == &quot;happy&quot;:&amp;#10;        if len(count_H_diff) &gt;42:&amp;#10;            if len(count_H_same) &lt;42:&amp;#10;                    stim_trial = &quot;same&quot;&amp;#10;                    count_H_same.append(1)&amp;#10;            elif len(count_A_same) &lt;42:&amp;#10;                    stim_trial = &quot;same&quot;&amp;#10;                    em_trial = &quot;anger&quot;&amp;#10;                    count_A_same.append(1)&amp;#10;            elif len(count_A_diff) &lt;42:&amp;#10;                    em_trial = &quot;anger&quot;&amp;#10;                    count_A_diff.append(1)&amp;#10;if stim_trial == &quot;same&quot;:&amp;#10;    if em_trial == &quot;happy&quot;:&amp;#10;        if len(count_H_same) &gt;42:&amp;#10;            if len(count_A_same) &lt; 42:&amp;#10;                    em_trial = &quot;anger&quot;&amp;#10;                    count_A_same.append(1)&amp;#10;            elif len(count_A_diff) &lt;42:&amp;#10;                    em_trial = &quot;anger&quot;&amp;#10;                    stim_trial = &quot;different&quot;&amp;#10;                    count_A_diff.append(1)&amp;#10;            elif len(count_H_diff) &lt;42:&amp;#10;                    stim_trial = &quot;different&quot;&amp;#10;                    count_H_diff.append(1)&amp;#10;thisExp.addData(&quot;em&quot;, em_trial)&amp;#10;thisExp.addData(&quot;stim&quot;, stim_trial)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="titrate_1A">
      <PolygonComponent name="fixation_box3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_box3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(600, 450)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="image_7">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_8">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_8" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_4">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="y" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_7">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="faceX = fg.make_new_face(avg_face, face_arr)&amp;#10;# save a model to model_path&amp;#10;model_path0 = os.path.join(out_model_path0, &quot;face{0:04d}.mhm&quot;.format(n+100))&amp;#10;fg.write_mimic_file(avg_path, model_path0, keys, faceX)&amp;#10;makehuman.load_model(model_path0)&amp;#10;makehuman.set_expression(neutral, emotion1, 57.7)&amp;#10;image_path3 = makehuman.get_render(img_path0, settings, str(n+100))&amp;#10;path3 = str(img_path0) +'/render_' + str(n+100) + '.png'&amp;#10;if key_resp_4.corr == 0:&amp;#10;    z_listA.append(0)&amp;#10;    z = z_listA[n-1]&amp;#10;elif key_resp_4.corr == 1:&amp;#10;    z_listA.append(1)&amp;#10;    z = z_listA[n-1]&amp;#10;if n&gt;2:&amp;#10;    if z_listA[n-2] == 0:&amp;#10;        if z_listA[n-1] == 1:&amp;#10;            reversals+=1&amp;#10;    elif z_listA[n-2]==1:&amp;#10;        if z_listA[n-1]==0:&amp;#10;            reversals+=1&amp;#10;thisExp.addData(&quot;stim_lev&quot;, c)&amp;#10;thisExp.addData(&quot;trial_n&quot;, n)&amp;#10;if n&lt;3:&amp;#10;    next_stimA = c - (s/n)*(z-acc)&amp;#10;    next_stim_percentA = next_stimA*100&amp;#10;    c = next_stimA&amp;#10;    # save a model to model_path&amp;#10;    makehuman.load_model(model_path0)&amp;#10;    makehuman.set_expression(neutral, emotion1, next_stim_percentA)&amp;#10;    image_path2 = makehuman.get_render(img_path0, settings, str(n+100)+&quot;_titrate&quot;)&amp;#10;    path2 = str(img_path0) +'/render_' + str(n+100) + '_titrate.png'&amp;#10;    n+=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="titrateA">
      <PolygonComponent name="fixation_box4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_box4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(600,450)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="image_9">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_9" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_10">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_10" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(400,300)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_5">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="y" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_9">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="faceX = fg.make_new_face(avg_face, face_arr)&amp;#10;# save a model to model_path&amp;#10;model_path0 = os.path.join(out_model_path0, &quot;face{0:04d}.mhm&quot;.format(n+100))&amp;#10;fg.write_mimic_file(avg_path, model_path0, keys, faceX)&amp;#10;makehuman.load_model(model_path0)&amp;#10;makehuman.set_expression(neutral, emotion1, 57.7)&amp;#10;image_path3 = makehuman.get_render(img_path0, settings, str(n+100))&amp;#10;path3 = str(img_path0) +'/render_' + str(n+100) + '.png'&amp;#10;&amp;#10;if key_resp_5.corr == 0:&amp;#10;    z_listA.append(0)&amp;#10;    z = z_listA[n-1]&amp;#10;elif key_resp_5.corr == 1:&amp;#10;    z_listA.append(1)&amp;#10;    z = z_listA[n-1]&amp;#10;    &amp;#10;if z_listA[n-2] == 0:&amp;#10;    if z_listA[n-1] == 1:&amp;#10;        reversals+=1&amp;#10;elif z_listA[n-2]==1:&amp;#10;    if z_listA[n-1]==0:&amp;#10;        reversals+=1&amp;#10;thisExp.addData(&quot;stim_lev&quot;, c)&amp;#10;thisExp.addData(&quot;trial_n&quot;, n)&amp;#10;if n&gt;=3: &amp;#10;    if c &gt; .577:&amp;#10;        next_stimA = c - (s/(2+reversals))*(z-acc)&amp;#10;        next_stim_percentA = next_stimA * 100&amp;#10;        c = next_stimA&amp;#10;        makehuman.load_model(model_path0)&amp;#10;        makehuman.set_expression(neutral, emotion1, next_stim_percentA)&amp;#10;        image_path2 = makehuman.get_render(img_path0, settings, str(n+100)+&quot;_titrate&quot;)&amp;#10;        path2 = str(img_path0) +'/render_' + str(n+100) + '_titrate.png'&amp;#10;        n+=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="next_em">
      <CodeComponent name="code_8">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="n=0&amp;#10;s = .925 #step size&amp;#10;c = 1.5 # starting stimulus intensity&amp;#10;acc = .8 #target accuracy level&amp;#10;reversals = 0&amp;#10;z_listA = []&amp;#10;faceX = fg.make_new_face(avg_face, face_arr)&amp;#10;# save a model to model_path&amp;#10;model_path0 = os.path.join(out_model_path0, &quot;face{0:04d}.mhm&quot;.format(n+100))&amp;#10;fg.write_mimic_file(avg_path, model_path0, keys, faceX)&amp;#10;makehuman.load_model(model_path0)&amp;#10;makehuman.set_expression(neutral, emotion1, 57.7)&amp;#10;image_path3 = makehuman.get_render(img_path0, settings, str(n+100))&amp;#10;path3 = str(img_path0) +'/render_' + str(n+100) + '.png'&amp;#10;makehuman.load_model(model_path0)&amp;#10;makehuman.set_expression(neutral, emotion1, 150)&amp;#10;image_path2 = makehuman.get_render(img_path0, settings, str(n+100)+&quot;_titrate&quot;)&amp;#10;path2 = str(img_path0) +'/render_' + str(n+100) + '_titrate.png'&amp;#10;n+=1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback">
      <CodeComponent name="code_10">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if key_resp_6.keys is None:&amp;#10;    fb_message = &quot;Too Slow!&quot;&amp;#10;    timeout = 1&amp;#10;else:&amp;#10;    fb_message = &quot; &quot;&amp;#10;    fb_color = 'green'&amp;#10;    timeout = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="fixation_box6">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_box6" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(666,500)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$timeout" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$timeout" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fb_message" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="iti">
      <CodeComponent name="code_11">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="iti = (random() * .3) + 1 #between 1-1.3seconds for iti, randomized&amp;#10;thisExp.addData('iti', iti)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="fixation_box7">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_box7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(666,500)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_4">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val=" " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="after_render">
      <TextComponent name="text_5">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Done rendering! Press 'space' to continue." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_7">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_7" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_12">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="count_A_same = []&amp;#10;count_A_diff = []&amp;#10;count_H_same = []&amp;#10;count_H_diff = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="ending">
      <TextComponent name="text_6">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_6" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You've reached the end of the experiment.&amp;#10;Thank you for your participation." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_8">
        <Param val="'q'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_8" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="break_2">
      <TextComponent name="text_7">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Block completed.&amp;#10;Press the 'right' button to continue.&amp;#10;You have finished block number (out of 16):" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_8">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -.25)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$count" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_9">
        <Param val="'8'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_9" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_13">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="count += 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="to_render">
      <TextComponent name="text_9">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press 's' to skip rendering, press 'c' to render." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_10">
        <Param val="'s','c'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_10" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="accuracy">
      <CodeComponent name="code_15">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="accuracy_level = accuracy_train / 84&amp;#10;thisExp.addData('accuracy', accuracy_level)&amp;#10;&amp;#10;if accuracy_level &lt; 0.6:&amp;#10;    statement = (accuracy_level*100) + 100&amp;#10;else:&amp;#10;    statement = &quot;Practice is complete.&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_11.keys == &quot;c&quot;:&amp;#10;    trials_3.finished = True&amp;#10;accuracy_train = 0&amp;#10;accuracy_level = 0" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_15" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_12">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_12" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$statement" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_11">
        <Param val="'c','r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_11" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="em">
      <CodeComponent name="code_16">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="em = ['anger', 'happy']&amp;#10;stim = ['same', 'different']&amp;#10;shuffle(em)&amp;#10;shuffle(stim)&amp;#10;em_trial = em[0]&amp;#10;stim_trial = stim[0]&amp;#10;thisExp.addData(&quot;em&quot;, em_trial)&amp;#10;thisExp.addData(&quot;stim&quot;, stim_trial)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_16" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="trial0">
      <CodeComponent name="code_17">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="isi = (random() * .3) + .4 #between 400-700ms isi, randomized&amp;#10;thisExp.addData('isi', isi)&amp;#10;start_time = isi + .2 #rt starts after the second image is shown&amp;#10;rt = start_time + 2 #2 seconds after second image = response time limit&amp;#10;thisExp.addData('img_onset', start_time)&amp;#10;&amp;#10;if em_trial == &quot;happy&quot;:&amp;#10;    train_path1 = image_path[trial_num]&amp;#10;    if stim_trial == &quot;same&quot;:&amp;#10;        train_path2 = image_path[trial_num]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;    elif stim_trial == &quot;different&quot;:&amp;#10;        train_path2 = image_path1[trial_num]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;    trial_num += 1&amp;#10;elif em_trial == &quot;anger&quot;:&amp;#10;    train_path1 = image_path_ang[trial_num0]&amp;#10;    if stim_trial == &quot;same&quot;:&amp;#10;        train_path2 = image_path_ang[trial_num0]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;    elif stim_trial == &quot;different&quot;:&amp;#10;        train_path2 = image_path1_ang[trial_num0]&amp;#10;        if expInfo['which button yes'] == &quot;left&quot;:&amp;#10;            keyCorrect = [&quot;1&quot;]&amp;#10;        elif expInfo['which button yes'] == &quot;right&quot;:&amp;#10;            keyCorrect = [&quot;8&quot;]&amp;#10;    trial_num0 += 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_12.corr == 1:&amp;#10;    accuracy_train +=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_17" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(666, 500)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$rt" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="image_11">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$train_path1" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_11" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[533,400]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_12">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$train_path2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_12" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[533,400]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$start_time" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="stim_trigger">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="port.close()&amp;#10;port.open()&amp;#10;#set stimTriggerSent to false at the start of the trial. this way&amp;#10;#when the stimulus is shown, we can change it to True. This variable&amp;#10;#is used to ensure we only throw the stimulus EEG trigger once.&amp;#10;stimTriggerSent = False&amp;#10;stimTriggerSent2 = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;#the first if statement below ensures that the subsequent if statements (and throwing of triggers)&amp;#10;#only occurs once per trial. That is, only when the stimulus is presented (.status = STARTED) and&amp;#10;#stimTriggerSent is still False. Once a trigger is sent, we change stimTriggerSent to True so that &amp;#10;#the stimulus eeg trigger will not be sent again for this trial&amp;#10;#codes: first image: 03 = happy, 04 = anger&amp;#10;#second image: 05 = happy same, 06 = happy different, 07 = anger same, 08 = anger different&amp;#10;if image_11.status == STARTED and not stimTriggerSent:&amp;#10;    if em_trial == &quot;happy&quot;: #code denoting which stimulus array was sent&amp;#10;        stimTriggerSent = True&amp;#10;        port.write([0x03]) #hexcode = 3; eeg trigger sent&amp;#10;        time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;        port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;    elif em_trial == &quot;anger&quot;:&amp;#10;        stimTriggerSent = True&amp;#10;        port.write([0x04]) #hexcode = 4&amp;#10;        time.sleep(PulseWidth)&amp;#10;        port.write([0x00])&amp;#10;if image_12.status == STARTED and not stimTriggerSent2:&amp;#10;    if em_trial == &quot;happy&quot;:&amp;#10;        if stim_trial == &quot;same&quot;: #code denoting which stimulus array was sent&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x05]) #hexcode = 5; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;        elif stim_trial == &quot;different&quot;:&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x06]) #hexcode = 6; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;    elif em_trial == &quot;anger&quot;:&amp;#10;        if stim_trial == &quot;same&quot;: #code denoting which stimulus array was sent (from excel file)&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x07]) #hexcode = 7; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;        elif stim_trial == &quot;different&quot;:&amp;#10;            stimTriggerSent2 = True #switch stimTriggerSent to True so that the stimulus eeg trigger will not be sent again this trial&amp;#10;            port.write([0x08]) #hexcode = 8; eeg trigger sent&amp;#10;            time.sleep(PulseWidth) #how long to wait before clearing trigger port&amp;#10;            port.write([0x00]) #clear trigger port by sending hexcode = 0&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stim_trigger" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_12">
        <Param val="'1','8'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$keyCorrect" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_12" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$rt" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="resp_trigger">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#clear out the keys_counted variable at the start of the trial&amp;#10;#this variable will hold the keys that have had eeg triggers thrown&amp;#10;#already within a given trial.&amp;#10;keys_counted = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;if key_resp_12.keys and len(key_resp_12.keys) &gt; len(keys_counted):# A key response has been made but we haven't yet &quot;counted&quot; it&amp;#10;    keys_counted.append(key_resp_12.keys[-1]) #add this response to list of keys pressed this trial&amp;#10;    # first digit: response (1:1,2:8), second digit: accuracy (1:correct,2:incorrect)&amp;#10;    if len(key_resp_12.keys) &lt; 2: #if this is  the first response&amp;#10;        if key_resp_12.keys[-1] == '1':&amp;#10;            if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x0B]) # 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x0C])# 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;            elif stim_trial == 'different':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x0C])# 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x0B])# 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;&amp;#10;        elif key_resp_12.keys[-1] == '8':&amp;#10;            if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x0C]) # 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x0B])# 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;            elif stim_trial == 'different':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x0B])# 11&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x0C])# 12&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;&amp;#10;    elif len(key_resp_12.keys) &gt;= 2: #if this is NOT the first response&amp;#10;        #first digit: response, second digit: accuracy&amp;#10;        if key_resp_12.keys[-1] == '1':&amp;#10;             if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x15]) # 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x16])# 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;             elif stim_trial == 'different':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x16])# 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x15])# 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                    &amp;#10;        elif key_resp_12.keys[-1] == '8':&amp;#10;            if stim_trial == 'same':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                    port.write([0x16]) # 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                    port.write([0x15])# 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;            elif stim_trial == 'different':&amp;#10;                if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                    port.write([0x15])# 21&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;                elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                    port.write([0x16])# 22&amp;#10;                    time.sleep(PulseWidth)&amp;#10;                    port.write([0x00])&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="resp_trigger" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_23">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="size1 = [453, 613]&amp;#10;shuffle(size1)&amp;#10;first_size = size1[0]&amp;#10;second_size = size1[0]*0.75&amp;#10;image_12_size = (first_size, second_size)&amp;#10;image_12.size = image_12_size&amp;#10;thisExp.addData('image_size2', image_12_size)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_23" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="ready">
      <TextComponent name="text_13">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_13" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Practice done. Press the right button to begin the task." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_13">
        <Param val="'8'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_13" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_18">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trial_num = 0&amp;#10;trial_num0 = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_18" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="reset_count">
      <CodeComponent name="code_19">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trial_num = 0&amp;#10;trial_num0 = 0&amp;#10;count_A_same = []&amp;#10;count_A_diff = []&amp;#10;count_H_same = []&amp;#10;count_H_diff = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_19" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="setup">
      <CodeComponent name="code_20">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;import serial #used for sending eeg triggers&amp;#10;import time #indirerctly used for sending eeg triggers (how long to wait before clearing port)&amp;#10;win.mouseVisible = False #hide mouse cursor&amp;#10;port = serial.Serial('COM3') #open specified port (COM3) for sending eeg triggers to           &amp;#10;port.close()&amp;#10;port.open()&amp;#10;PulseWidth = 0.002 #how long to wait before clearing port after sending trigger (2 ms is sufficient at 1000 hz sampling rate)&amp;#10;&amp;#10;port.write([0x00]) #clear serial port&amp;#10;time.sleep(PulseWidth) #wait PulseWidth amount of time before doing anything else" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="&amp;#10;win.mouseVisible = True #make the mouse cursor visable again&amp;#10;#port.write([0xFF]) #set port values back to default state (FF)&amp;#10;time.sleep(PulseWidth) #wait PulseWidth amount of time before doing anything else&amp;#10;#port.close() #close port opened at start of exp&amp;#10;" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_20" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="mult_keys">
      <CodeComponent name="code_21">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="iti = (random() * .3) + 1&amp;#10;thisExp.addData('iti', iti)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_21" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1,-1,-1]" valType="color" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(666,500)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_14">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_14" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_15">
        <Param val="'1','8'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$keyCorrect" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_15" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_22">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="keys_counted = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;if key_resp_15.keys and len(key_resp_15.keys) &gt; len(keys_counted):# A key response has been made but we haven't yet &quot;counted&quot; it&amp;#10;    keys_counted.append(key_resp_15.keys[-1])&amp;#10;    if len(key_resp_15.keys) &gt;=1 : #if this is NOT the first response&amp;#10;            #first digit: response, second digit: accuracy&amp;#10;            if key_resp_15.keys[-1] == '1':&amp;#10;                 if stim_trial == 'same':&amp;#10;                    if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                        port.write([0x15]) # 21&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;                    elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                        port.write([0x16])# 22&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;                 elif stim_trial == 'different':&amp;#10;                    if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                        port.write([0x16])# 22&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;                    elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                        port.write([0x15])# 21&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;                        &amp;#10;            elif key_resp_15.keys[-1] == '8':&amp;#10;                if stim_trial == 'same':&amp;#10;                    if expInfo['which button yes'] == &quot;right&quot;: #incorrect response&amp;#10;                        port.write([0x16]) # 22&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;                    elif expInfo['which button yes'] == &quot;left&quot;: #correct response&amp;#10;                        port.write([0x15])# 21&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;                elif stim_trial == 'different':&amp;#10;                    if expInfo['which button yes'] == &quot;right&quot;: #correct response&amp;#10;                        port.write([0x15])# 21&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;                    elif expInfo['which button yes'] == &quot;left&quot;: #incorrect response&amp;#10;                        port.write([0x16])# 22&amp;#10;                        time.sleep(PulseWidth)&amp;#10;                        port.write([0x00])&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_22" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="setup_2">
      <CodeComponent name="code_25">
        <Param val="# the face_generator.py file is from the face generator plugin&amp;#10;import face_generator as fg&amp;#10;import numpy as np&amp;#10;import os&amp;#10;from glob import glob&amp;#10;# the socket plugin comes with py_client.py&amp;#10;from py_client import PythonMHC&amp;#10;_thisDir = os.path.dirname(os.path.abspath(__file__))&amp;#10;os.chdir(_thisDir)&amp;#10;# first, setup your directories and load your pre-existing sample models:&amp;#10;# the psychopy project directory&amp;#10;path = _thisDir&amp;#10;# where are the pre-established models (aside from the average identity)?&amp;#10;model_samples = os.path.join(path,&quot;sample_models&quot;)&amp;#10;models_list = glob(os.path.join(model_samples, &quot;*.mhm&quot;))&amp;#10;# set the path/name to your average identity&amp;#10;avg_path = os.path.join(path,&quot;identity_average.mhm&quot;)&amp;#10;# load the average identity's parameters&amp;#10;avg = fg.read_params(avg_path)&amp;#10;&amp;#10;# load the other models' parameters&amp;#10;full_params = [fg.read_params(f) for f in models_list]&amp;#10;&amp;#10;# load the keys, the average, and the rest of the models&amp;#10;all_stuff = fg.get_ordered_values(avg, *full_params)&amp;#10;# the keys for the features being changed&amp;#10;keys = all_stuff[0]&amp;#10;# the average face parameters (similar to avg, but it includes 0's for key values that exist in the other model files)&amp;#10;avg_face = all_stuff[1]&amp;#10;face_arr = np.array(all_stuff[2:])&amp;#10;radius, face_arr = fg.set_faces_to_radius(avg_face, face_arr)&amp;#10;&amp;#10;# get ready to actually make models and render things.&amp;#10;# these are the render settings&amp;#10;# you may want a different image size&amp;#10;size = (533,400)&amp;#10;settings = dict(AA=False, dimensions=size, lightmapSSS=False)&amp;#10;&amp;#10;# start the socket client (do this after you already pressed the Socket Render button in MakeHuman)&amp;#10;makehuman = PythonMHC()&amp;#10;&amp;#10;emotion_file = path + &quot;/happy_teeth.mhpose&quot;&amp;#10;emotion_file_ang = path + &quot;/anger.mhpose&quot;&amp;#10;# load the expression parameters for neutral and some emotion (as specified by an mhpose file).&amp;#10;neutral, emotion = makehuman.load_expression(emotion_file)&amp;#10;neutral, emotion1 = makehuman.load_expression(emotion_file_ang)&amp;#10;trial_num_block = 0&amp;#10;count = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="win.mouseVisible = False" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="count = 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="win.mouseVisible = True" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_25" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback0">
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if key_resp_12.keys is None:&amp;#10;    fb_message = &quot;Too Slow!&quot;&amp;#10;    timeout = 1&amp;#10;else:&amp;#10;    fb_message = &quot; &quot;&amp;#10;    fb_color = 'green'&amp;#10;    timeout = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(666, 500)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$timeout" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$timeout" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fb_message" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback0_2"/>
    <Routine name="begin">
      <TextComponent name="text_10">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press the right key when you are ready to begin." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_14">
        <Param val="'8'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_14" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <Routine name="setup_2"/>
    <Routine name="to_render"/>
    <Routine name="render_text"/>
    <Routine name="rendering"/>
    <Routine name="after_render"/>
    <Routine name="instr"/>
    <LoopInitiator loopType="TrialHandler" name="trials_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="10" valType="code"/>
      <Param name="name" updates="None" val="trials_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="begin"/>
    <Routine name="reset_count"/>
    <Routine name="iti"/>
    <LoopInitiator loopType="TrialHandler" name="trials_4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="84" valType="code"/>
      <Param name="name" updates="None" val="trials_4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="em"/>
    <Routine name="trial0"/>
    <Routine name="feedback0"/>
    <Routine name="mult_keys"/>
    <LoopTerminator name="trials_4"/>
    <Routine name="accuracy"/>
    <LoopTerminator name="trials_3"/>
    <Routine name="ready"/>
    <LoopInitiator loopType="TrialHandler" name="trials_5">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="8" valType="code"/>
      <Param name="name" updates="None" val="trials_5" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="reset_count"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="2" valType="code"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="iti"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="84" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="which_em"/>
    <Routine name="trial"/>
    <Routine name="feedback"/>
    <Routine name="mult_keys"/>
    <LoopTerminator name="trials"/>
    <Routine name="break_2"/>
    <LoopTerminator name="trials_2"/>
    <LoopTerminator name="trials_5"/>
    <Routine name="ending"/>
  </Flow>
</PsychoPy2experiment>
